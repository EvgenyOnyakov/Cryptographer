#include <iostream>    
#include <string>      // подключаем диркутиву, для работы со строками (string)
#include <Windows.h>   // подключаем заголовочный файл для работы генератора случайных чисел в варианте № 1
#include <random>      // подключаем директиву для работы генератора случайных чисел в варианте № 1

// Функция зашифровки текста

void crypt()                                          
{
	// Генератор случайных чисел Вариант № 1

	// std::random_device rd;
	// std::mt19937 mersenne(rd());
	// unsigned int cryptkey = mersenne();

	// Генератор случайных чисел Вариант № 2 ( при необходимости раскомментировать текст снизу и закомментировать Вариант №1 или наоборот)

	srand(time(0));
	char cryptkey = rand() % 256;

	std::cout << "Введите текст, который хотите зашифровать:" << std::endl << std::endl;
	std::string inputData;                                                                           // объявляем строку inputData в которую будет введен текст для щифрования
	std::getline(std::cin, inputData);                                                               // считываем введенные данные из консоли и сохраняем в inputData
	for (int i = 0; i < inputData.length(); i++)                                                     // цикл шифрования каждого символа строки inputData
	{
		inputData[i] ^= cryptkey;                                                                    // при помощи XOR шифруем каждый символ в строке
		inputData[i]++;                                                                              // и зашифрованный символ сдвигаем вправо на 1 позицию
	};
	system("cls");                                                                                   // очищаем экран консоли
	std::cout << "Введенный текст зашифрован:" << std::endl << std::endl;
	std::cout << inputData << std::endl << std::endl;                                                // выводим в консоль зашифрованный текст и ключ для расшифровки
	std::cout << "Ключ для расшифровки: " << static_cast<int>(cryptkey) << std::endl << std::endl;
}

// Функция расшифровки текста

void uncrypt()
{
	std::cout << "Введите ключ для расшифровки: " << std::endl << std::endl;                            
	std::string uncryptkey;                                                                              // объявляем строку uncryptkey в которую будет введен ключ для расшифровки
	std::getline(std::cin, uncryptkey);	                                                                 // считываем введенные данные из консоли и сохраняем в uncryptkey
	std::cout << std::endl << "Введите текст, который хотите расшифровать:" << std::endl << std::endl;
	std::string outputData;                                                                              // объявляем строку outputData в которую будет введен текст для расшифровки
	std::getline(std::cin, outputData);                                                                  // считываем введенные данные из консоли и сохраняем в outputData       
	for (int i = 0; i < outputData.length(); i++)                                                        // цикл расшифровки каждого символа строки outputData
	{
		outputData[i]--;                                                                                 // сдвигаем зашифрованный символ на 1 позицию влево
		outputData[i] ^= std::stoi(uncryptkey);                                                          // при помощи XOR расшифруем каждый символ в строке  
	}                                                                                                    // std::stoi(uncryptkey) - представление строки в виде целого числа
	system("cls");                                                                                       // очищаем экран консоли
	std::cout << "Расшифрованный текст:" << std::endl << std::endl;
	std::cout << outputData << std::endl << std::endl;                                                   // выводим в консоль расшифрованный текст

}


int main() {
	SetConsoleCP(1251);                                                                                // подключение кириллицы
	SetConsoleOutputCP(1251);                                                                          // для консоли и редактора

	std::string variant;                                                                               // объявляем строку variant для ввода варианта действий в консоль
	std::cout << "Выберите, что вы хотите сделать с текстом" << std::endl << std::endl;                // 1 - зашифровать текст
	std::cout << "Для того, чтобы зашифровать текст введите - 1" << std::endl;                         // 2 - расшифровать текст
	std::cout << "Для того, чтобы расшифровать текст введите - 2" << std::endl << std::endl;
	std::getline(std::cin, variant);                                                                   // считываем введенные данные из консоли и сохраняем в variant 
	

	while (variant < "1" || variant > "2")                                                             // цикл для ввода только нужных значений "1" или "2"
	{
		std::cout << "Для того, чтобы ЗАшифровать текст введите - 1" << std::endl;                     // если в консоль ввели что-либо кроме "1" или "2" , просим ввести "1" или "2" снова и снова
		std::cout << "Для того, чтобы РАСшифровать текст введите - 2" << std::endl << std::endl;
		std::getline(std::cin, variant);
	}

	
	if (variant == "1")    // условие на основе выбранного варианта "1" - зашифровать текст
	{
		system("cls");     // очищаем экран консоли
		crypt();           // вызываем функцию зашифровки текста
	}
	if (variant == "2")    // условие на основе выбранного варианта "2" - расшифровать текст
	{
		system("cls");     // очищаем экран консоли
		uncrypt();         // вызываем функцию зашифровки текста
	}

	return 0;
}